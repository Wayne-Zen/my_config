"========================================
" Sections:
"       -> General Settings
"       -> Display Settings
"       -> HotKey Settings
"       -> Others
"==========================================

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General Settings

" Enable mouse
set mouse=a

" Encode
set encoding=utf-8

" Leader
let mapleader = ';'

" Delete eol, auto-indent
set backspace=indent,eol,start

" No compatible with old vi
set nocompatible

" Sets how many lines of history VIM has to remember
set history=2000

" filetype
filetype on
filetype plugin on
filetype indent on
syntax on

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Display Settings

" Set 10 off lines to the cursor - when moving vertically using j/k
set scrolloff=10

" Do not warp
set nowrap

" show
set ruler                       " show the current row and column
set number                      " show line numbers
set nowrap
set showcmd                     " display incomplete commands
set showmode                    " display current modes
set showmatch                   " jump to matches when entering parentheses
set matchtime=2                 " tenths of a second to show the matching parenthesis

" show location
set cursorline

""""" STATUS LINE """""
" Always show status
set laststatus=2
" status line style
" < truncate if space is not enough
" f relative file path to CWD
" m if modified
" r if readonly
" h help buffer flag
" = align rest to right
" y filetype
" l line number
" L total line
" c column number
" p position
set statusline=%<%f%r%m%h\ \ CWD:\ %{getcwd()}\ \ filetype:\ %y\ %=[line:%l/%L,\ col:%c]\ %p%%\ -----
"""""""""""""""""""""""""

" Invisible characters style
set list listchars=tab:>-,eol:â–‘
set nolist


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Hotkey Settings

" <F1> :Toggle line number 
noremap <F1> :set nu!<CR>
noremap! <F1> <Esc>:set nu!<CR>li

" <F2> :Toggle line wrap
noremap <F2> :set wrap!<CR>
noremap! <F2> <Esc>:set wrap!<CR>li

" <F3> :Toggle show invisible characters
noremap <F3> :set list!<CR>
noremap! <F3> <Esc>:set list!<CR>li

" <F4> :Toggle replace between tab and 4 space 
noremap <F4> :set expandtab!<CR>:% retab!<CR>
noremap! <F4> <Esc>:set expandtab!<CR>:% retab!<CR>li

" <F5> :Toggle hightlight current column
noremap <F5> :set cursorcolumn!<CR>
noremap! <F5> <Esc>:set cursorcolumn!<CR>li

" <F6> :Toggle pastemode
set pastetoggle=<F6>

" <F7> :Toggle mouse
nnoremap <F7> :call ToggleMouse()<CR>
function! ToggleMouse()
	if &mouse == 'a'
		set mouse=
		echo "Mouse usage disabled"
	else
		set mouse=a
		echo "Mouse usage enabled"
	endif
endfunction

" continue shift
vnoremap > >gv
vnoremap < <gv

" Move cursor in wrapped line
nnoremap k gk
nnoremap gk k
nnoremap j gj
nnoremap gj j


" s for save
nnoremap s :w<CR>

" U to redo
noremap <S-u> <C-R>

" Swap implementations of ` and ' jump to markers
" By default, ' jumps to the marked line, ` jumps to the marked line and
" column, so swap them
nnoremap ' `
nnoremap ` '

" J,K to back to scroll down/up current line
noremap <S-j> 10j
noremap <S-k> 10k

" H,L to home end
noremap <S-h> <Home>
noremap <S-l> <End>

" w, e for word move
noremap <S-w> b
noremap <S-e> ge

" Z to exit
noremap <S-z> <S-z><S-z>

" space to select current word
nnoremap <Space> viw

" quick esc
inoremap fd <esc>
vnoremap fd <esc>

" remove search hight
noremap // :let @/ = ""<CR>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Others
" format
autocmd BufNewFile,BufRead * setlocal formatoptions=""

" search
set hlsearch                    " highlight searches
set incsearch                   " do incremental searching, search as you type
set ignorecase                  " ignore case when searching
set smartcase                   " no ignorecase if Uppercase char present

" tab
set expandtab                   " expand tabs to spaces
set smarttab
set shiftround

" indent
set autoindent smartindent shiftround
set shiftwidth=4
set tabstop=4
set softtabstop=4                " insert mode tab and backspace use 4 spaces

" complete
set completeopt=longest,menuone
set wildmenu                           " show a navigable menu for tab completion"
set wildmode=longest,list,full

" remember last postion when reopen
if has("autocmd")
    au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif



